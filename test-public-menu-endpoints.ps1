#!/usr/bin/env pwsh
# Script pour tester les nouveaux endpoints publics des menus

Write-Host "üçΩÔ∏è  Test des endpoints publics des menus VEG'N BIO" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

$API_URL = "https://vegn-bio-backend.onrender.com"

Write-Host "`nüåê Test des endpoints publics..." -ForegroundColor Yellow
Write-Host "URL: $API_URL" -ForegroundColor Cyan

# Test de sant√© de l'API
Write-Host "`nüè• Test de sant√© de l'API..." -ForegroundColor Yellow
try {
    $healthResponse = Invoke-RestMethod -Uri "$API_URL/actuator/health" -Method GET -TimeoutSec 15
    Write-Host "‚úÖ API accessible - Status: $($healthResponse.status)" -ForegroundColor Green
} catch {
    Write-Host "‚ùå API non accessible" -ForegroundColor Red
    Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Test des restaurants
Write-Host "`nüè™ Test des restaurants..." -ForegroundColor Yellow
try {
    $restaurantsResponse = Invoke-RestMethod -Uri "$API_URL/api/restaurants" -Method GET -ContentType "application/json" -TimeoutSec 15
    Write-Host "‚úÖ Restaurants r√©cup√©r√©s: $($restaurantsResponse.Count)" -ForegroundColor Green
    
    foreach ($restaurant in $restaurantsResponse) {
        Write-Host "  - $($restaurant.name) (Code: $($restaurant.code))" -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå Erreur lors de la r√©cup√©ration des restaurants" -ForegroundColor Red
    Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test des menus publics
Write-Host "`nüçΩÔ∏è  Test des menus publics..." -ForegroundColor Yellow
try {
    $menusResponse = Invoke-RestMethod -Uri "$API_URL/api/public/menus" -Method GET -ContentType "application/json" -TimeoutSec 15
    Write-Host "‚úÖ Menus publics r√©cup√©r√©s: $($menusResponse.Count)" -ForegroundColor Green
    
    foreach ($menu in $menusResponse) {
        Write-Host "  - $($menu.title) (Restaurant: $($menu.restaurantName))" -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå Erreur lors de la r√©cup√©ration des menus publics" -ForegroundColor Red
    Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test des plats publics
Write-Host "`nü•ó Test des plats publics..." -ForegroundColor Yellow
try {
    $menuItemsResponse = Invoke-RestMethod -Uri "$API_URL/api/public/menu-items" -Method GET -ContentType "application/json" -TimeoutSec 15
    Write-Host "‚úÖ Plats publics r√©cup√©r√©s: $($menuItemsResponse.Count)" -ForegroundColor Green
    
    # Afficher quelques exemples
    $count = 0
    foreach ($item in $menuItemsResponse) {
        if ($count -lt 5) {
            Write-Host "  - $($item.name) - $([math]::Round($item.priceCents / 100, 2)) ‚Ç¨" -ForegroundColor White
            $count++
        }
    }
    if ($menuItemsResponse.Count -gt 5) {
        Write-Host "  ... et $($menuItemsResponse.Count - 5) autres plats" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå Erreur lors de la r√©cup√©ration des plats publics" -ForegroundColor Red
    Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test par restaurant
Write-Host "`nüè™ Test des menus par restaurant..." -ForegroundColor Yellow
$restaurantCodes = @('BAS', 'REP', 'NAT', 'ITA', 'BOU')
foreach ($code in $restaurantCodes) {
    try {
        $menuResponse = Invoke-RestMethod -Uri "$API_URL/api/public/menus/restaurant/$code" -Method GET -ContentType "application/json" -TimeoutSec 15
        Write-Host "‚úÖ Restaurant $code : $($menuResponse.Count) menu(s)" -ForegroundColor Green
        
        foreach ($menu in $menuResponse) {
            Write-Host "    - $($menu.title)" -ForegroundColor Gray
        }
    } catch {
        Write-Host "‚ùå Erreur pour le restaurant $code" -ForegroundColor Red
        Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# Test des plats par restaurant
Write-Host "`nü•ó Test des plats par restaurant..." -ForegroundColor Yellow
foreach ($code in $restaurantCodes) {
    try {
        $menuItemsResponse = Invoke-RestMethod -Uri "$API_URL/api/public/menu-items/restaurant/$code" -Method GET -ContentType "application/json" -TimeoutSec 15
        Write-Host "‚úÖ Restaurant $code : $($menuItemsResponse.Count) plat(s)" -ForegroundColor Green
        
        # Afficher quelques exemples
        $count = 0
        foreach ($item in $menuItemsResponse) {
            if ($count -lt 3) {
                Write-Host "    - $($item.name) - $([math]::Round($item.priceCents / 100, 2)) ‚Ç¨" -ForegroundColor Gray
                $count++
            }
        }
    } catch {
        Write-Host "‚ùå Erreur pour les plats du restaurant $code" -ForegroundColor Red
        Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# Test de recherche
Write-Host "`nüîç Test de recherche de plats..." -ForegroundColor Yellow
try {
    $searchResponse = Invoke-RestMethod -Uri "$API_URL/api/public/menu-items/search?name=burger" -Method GET -ContentType "application/json" -TimeoutSec 15
    Write-Host "‚úÖ Recherche 'burger': $($searchResponse.Count) r√©sultat(s)" -ForegroundColor Green
    
    foreach ($item in $searchResponse) {
        Write-Host "  - $($item.name) - $([math]::Round($item.priceCents / 100, 2)) ‚Ç¨" -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå Erreur lors de la recherche" -ForegroundColor Red
    Write-Host "Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n‚úÖ Test des endpoints publics termin√© !" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

Write-Host "`nüìã Endpoints publics disponibles:" -ForegroundColor Yellow
Write-Host "- GET /api/public/menus - Tous les menus" -ForegroundColor White
Write-Host "- GET /api/public/menus/restaurant/{code} - Menus par restaurant" -ForegroundColor White
Write-Host "- GET /api/public/menu-items - Tous les plats" -ForegroundColor White
Write-Host "- GET /api/public/menu-items/restaurant/{code} - Plats par restaurant" -ForegroundColor White
Write-Host "- GET /api/public/menu-items/search?name={nom} - Recherche de plats" -ForegroundColor White
Write-Host "- GET /api/public/menus/{id} - Menu par ID" -ForegroundColor White
Write-Host "- GET /api/public/menu-items/{id} - Plat par ID" -ForegroundColor White
