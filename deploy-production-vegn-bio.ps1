# Script de deploiement production VEG'N BIO
# Ce script deploye l'application avec les donnees specifiques VEG'N BIO

Write-Host "Deploiement Production VEG'N BIO" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green

# V√©rification des pr√©requis
Write-Host "`nüìã V√©rification des pr√©requis..." -ForegroundColor Yellow

# V√©rifier Java
try {
    $javaVersion = java -version 2>&1 | Select-String "version"
    Write-Host "‚úÖ Java install√©: $javaVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Java non install√©. Veuillez installer Java 17 ou sup√©rieur." -ForegroundColor Red
    exit 1
}

# V√©rifier Node.js
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js install√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js non install√©. Veuillez installer Node.js 18 ou sup√©rieur." -ForegroundColor Red
    exit 1
}

# V√©rifier PostgreSQL
try {
    $pgVersion = psql --version
    Write-Host "‚úÖ PostgreSQL install√©: $pgVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå PostgreSQL non install√©. Veuillez installer PostgreSQL." -ForegroundColor Red
    exit 1
}

# Configuration de la base de donn√©es
Write-Host "`nüóÑÔ∏è Configuration de la base de donn√©es..." -ForegroundColor Yellow

# Variables d'environnement pour la production
$env:SPRING_PROFILES_ACTIVE = "prod"
$env:DATABASE_URL = "jdbc:postgresql://localhost:5432/vegn_bio_prod"
$env:DATABASE_USERNAME = "vegn_bio_user"
$env:DATABASE_PASSWORD = "vegn_bio_secure_2024!"

Write-Host "‚úÖ Variables d'environnement configur√©es" -ForegroundColor Green

# Cr√©ation de la base de donn√©es si elle n'existe pas
Write-Host "`nüìä Cr√©ation de la base de donn√©es..." -ForegroundColor Yellow

$createDbScript = @"
CREATE DATABASE vegn_bio_prod;
CREATE USER vegn_bio_user WITH PASSWORD 'vegn_bio_secure_2024!';
GRANT ALL PRIVILEGES ON DATABASE vegn_bio_prod TO vegn_bio_user;
"@

try {
    psql -U postgres -c $createDbScript
    Write-Host "‚úÖ Base de donn√©es cr√©√©e avec succ√®s" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Base de donn√©es peut-√™tre d√©j√† existante, continuation..." -ForegroundColor Yellow
}

# D√©ploiement du backend
Write-Host "`nüîß D√©ploiement du backend..." -ForegroundColor Yellow

Set-Location backend

# Nettoyage et compilation
Write-Host "üì¶ Compilation du backend..." -ForegroundColor Cyan
./mvnw clean package -DskipTests

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de la compilation du backend" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Backend compil√© avec succ√®s" -ForegroundColor Green

# D√©marrage du backend en arri√®re-plan
Write-Host "üöÄ D√©marrage du backend..." -ForegroundColor Cyan
Start-Process -FilePath "java" -ArgumentList "-jar", "target/vegn-bio-api.jar", "--spring.profiles.active=prod" -WindowStyle Hidden

# Attendre que le backend d√©marre
Write-Host "‚è≥ Attente du d√©marrage du backend..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# Test de connectivit√© du backend
Write-Host "üîç Test de connectivit√© du backend..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/restaurants" -Method GET
    Write-Host "‚úÖ Backend op√©rationnel - $($response.Count) restaurants trouv√©s" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend non accessible" -ForegroundColor Red
    exit 1
}

Set-Location ..

# D√©ploiement du frontend
Write-Host "`nüé® D√©ploiement du frontend..." -ForegroundColor Yellow

Set-Location web

# Installation des d√©pendances
Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Cyan
npm install

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
    exit 1
}

# Build de production
Write-Host "üèóÔ∏è Build de production..." -ForegroundColor Cyan
npm run build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors du build" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Frontend build√© avec succ√®s" -ForegroundColor Green

# D√©marrage du frontend
Write-Host "üöÄ D√©marrage du frontend..." -ForegroundColor Cyan
Start-Process -FilePath "npm" -ArgumentList "run", "start" -WindowStyle Hidden

Set-Location ..

# Tests de validation
Write-Host "`nüß™ Tests de validation..." -ForegroundColor Yellow

# Test des endpoints critiques
$endpoints = @(
    "http://localhost:8080/api/restaurants",
    "http://localhost:8080/api/menus",
    "http://localhost:8080/api/events"
)

foreach ($endpoint in $endpoints) {
    try {
        $response = Invoke-RestMethod -Uri $endpoint -Method GET
        Write-Host "‚úÖ $endpoint - OK" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå $endpoint - ERREUR" -ForegroundColor Red
    }
}

# Test de l'authentification
Write-Host "`nüîê Test de l'authentification..." -ForegroundColor Yellow

$loginData = @{
    email = "admin@vegnbio.fr"
    password = "TestVegN2024!"
} | ConvertTo-Json

try {
    $authResponse = Invoke-RestMethod -Uri "http://localhost:8080/api/auth/login" -Method POST -Body $loginData -ContentType "application/json"
    Write-Host "‚úÖ Authentification admin OK - Token re√ßu" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur d'authentification" -ForegroundColor Red
}

# Affichage des informations de d√©ploiement
Write-Host "`nüéâ D√âPLOIEMENT TERMIN√â AVEC SUCC√àS !" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Green

Write-Host "`nüì± Applications disponibles :" -ForegroundColor Cyan
Write-Host "‚Ä¢ Frontend Web : http://localhost:3000" -ForegroundColor White
Write-Host "‚Ä¢ Backend API : http://localhost:8080" -ForegroundColor White
Write-Host "‚Ä¢ Documentation API : http://localhost:8080/swagger-ui.html" -ForegroundColor White

Write-Host "`nüë• Comptes de test disponibles :" -ForegroundColor Cyan
Write-Host "‚Ä¢ Admin : admin@vegnbio.fr / TestVegN2024!" -ForegroundColor White
Write-Host "‚Ä¢ Restaurateur : restaurateur@vegnbio.fr / TestVegN2024!" -ForegroundColor White
Write-Host "‚Ä¢ Client : client@vegnbio.fr / TestVegN2024!" -ForegroundColor White

Write-Host "`nüè¢ Restaurants configur√©s :" -ForegroundColor Cyan
Write-Host "‚Ä¢ VEG'N BIO BASTILLE (BAS)" -ForegroundColor White
Write-Host "‚Ä¢ VEG'N BIO REPUBLIQUE (REP)" -ForegroundColor White
Write-Host "‚Ä¢ VEG'N BIO NATION (NAT)" -ForegroundColor White
Write-Host "‚Ä¢ VEG'N BIO PLACE D'ITALIE/MONTPARNASSE/IVRY (ITA)" -ForegroundColor White
Write-Host "‚Ä¢ VEG'N BIO BEAUBOURG (BOU)" -ForegroundColor White

Write-Host "`nüìä Donn√©es configur√©es :" -ForegroundColor Cyan
Write-Host "‚Ä¢ 5 restaurants avec horaires et √©quipements" -ForegroundColor White
Write-Host "‚Ä¢ Menus vari√©s avec plats v√©g√©tariens/v√©g√©taliens" -ForegroundColor White
Write-Host "‚Ä¢ Gestion des allerg√®nes (14 types)" -ForegroundColor White
Write-Host "‚Ä¢ √âv√©nements et r√©servations de salles" -ForegroundColor White
Write-Host "‚Ä¢ Syst√®me de rapports et signalements" -ForegroundColor White

Write-Host "`nüîß Commandes utiles :" -ForegroundColor Cyan
Write-Host "‚Ä¢ Arr√™ter l'application : ./stop-docker.bat" -ForegroundColor White
Write-Host "‚Ä¢ Logs backend : tail -f backend/logs/application.log" -ForegroundColor White
Write-Host "‚Ä¢ Red√©marrer : ./deploy-production-vegn-bio.ps1" -ForegroundColor White

Write-Host "`n‚ú® Votre application VEG'N BIO est maintenant pr√™te en production !" -ForegroundColor Green
